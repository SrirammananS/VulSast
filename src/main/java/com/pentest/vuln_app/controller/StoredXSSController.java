package com.pentest.vuln_app.controller;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
public class StoredXSSController {

    private final JdbcTemplate jdbc;

    public StoredXSSController(JdbcTemplate jdbc) {
        this.jdbc = jdbc;
    }

    @GetMapping("/xss-stored-vuln")
    public String showVulnComments(Model model) {
        List<String> comments = jdbc.query("SELECT content FROM comments",
                (rs, rowNum) -> rs.getString("content"));
        model.addAttribute("comments", comments);
        return "xss-stored-vuln";
    }

    @PostMapping("/xss-stored-vuln")
    public String postVulnComment(@RequestParam String content) {
        jdbc.update("INSERT INTO comments (content) VALUES (?)", content);
        return "redirect:/xss-stored-vuln";
    }

    @GetMapping("/xss-stored-safe")
    public String showSafeComments(Model model) {
        List<String> comments = jdbc.query("SELECT content FROM comments",
                (rs, rowNum) -> rs.getString("content"));
        model.addAttribute("comments", comments);
        return "xss-stored-safe";
    }

    @PostMapping("/xss-stored-safe")
    public String postSafeComment(@RequestParam String content) {
        jdbc.update("INSERT INTO comments (content) VALUES (?)", content);
        return "redirect:/xss-stored-safe";
    }
}
