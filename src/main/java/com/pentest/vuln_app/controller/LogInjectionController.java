package com.pentest.vuln_app.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.ui.Model;

@Controller
public class LogInjectionController {

    private static final Logger logger = LoggerFactory.getLogger(LogInjectionController.class);

    // Serve the form page
    @GetMapping("/log-injection-form")
    public String showForm() {
        return "log-injection-form"; // Thymeleaf or JSP page name
    }

    // Vulnerable version (logs raw input)
    @GetMapping("/log-injection-vuln")
    public String logInjectionVuln(@RequestParam String userInput, Model model) {
        logger.info("User input: " + userInput); // Vulnerable logging
        model.addAttribute("input", userInput);
        return "log-injection-vuln";
    }

    // Safe version (logs sanitized input)
    @GetMapping("/log-injection-safe")
    public String logInjectionSafe(@RequestParam String userInput, Model model) {
        String sanitizedInput = sanitize(userInput);
        logger.info("User input: " + sanitizedInput); // Safe logging
        model.addAttribute("input", sanitizedInput);
        return "log-injection-safe";
    }

    // Sanitization method
    private String sanitize(String input) {
        return input.replaceAll("[\\r\\n]+", " ");
    }
}
