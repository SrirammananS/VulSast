package com.pentest.vuln_app.controller;

import jakarta.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.core.io.ResourceLoader;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFactory;
import java.io.InputStream;

@Controller
public class XPathInjectionController {

    private final ResourceLoader resourceLoader;

    // Inject the ResourceLoader to load resources from the resources folder
    public XPathInjectionController(ResourceLoader resourceLoader) {
        this.resourceLoader = resourceLoader;
    }

    @GetMapping("/xpath-form")
    public String showForm() {
        return "xpath-form";
    }

    @GetMapping("/xpath-login-vuln")
    public String loginVuln(@RequestParam String username,
                            @RequestParam String password,
                            Model model,
                            HttpServletRequest request) {

        boolean success = checkLogin(username, password, false, request);
        model.addAttribute("message", success ? "Login SUCCESS (vulnerable)" : "Login FAILED");
//        admin' or '1'='1
        return "xpath-result";
    }

    @GetMapping("/xpath-login-safe")
    public String loginSafe(@RequestParam String username,
                            @RequestParam String password,
                            Model model,
                            HttpServletRequest request) {

        boolean success = checkLogin(username, password, true, request);
        model.addAttribute("message", success ? "Login SUCCESS (safe)" : "Login FAILED");
        return "xpath-result";
    }

    private boolean checkLogin(String username, String password, boolean safe, HttpServletRequest request) {
        try {
            // Load the XML file from the resources folder
            Resource resource = resourceLoader.getResource("classpath:users.xml");
            InputStream is = resource.getInputStream();
            
            Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is);
            XPath xpath = XPathFactory.newInstance().newXPath();

            if (safe) {
                username = escapeXPath(username);
                password = escapeXPath(password);
            }

            String expr = String.format("//user[username/text()='%s' and password/text()='%s']", username, password);
            NodeList nodes = (NodeList) xpath.evaluate(expr, doc, XPathConstants.NODESET);
            return nodes.getLength() > 0;
        } catch (Exception e) {
            return false;
        }
    }

    // Basic XPath escaping (not bulletproof, but enough for the demo)
    private String escapeXPath(String input) {
        return input.replace("'", "&apos;").replace("\"", "&quot;");
    }
}
